{"version":3,"file":"static/js/reviews.7ed9b532.chunk.js","mappings":"4LA6BA,UAxBA,WACI,IAAOA,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAaN,GAASO,MAAK,SAAAC,GACvBJ,EAAWI,EAAKC,YACjBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,UAAWF,QAC1C,CAACX,KAGA,wBAEwB,IAAnBG,EAAQW,QAAe,qEACtBX,EAAQY,KAAI,SAAAC,GAAM,OAChB,2BACI,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFHF,EAAOG,W,oJCpBnC,IAAMC,EAAU,mCACVC,EAAW,+BAIV,SAASC,IACZ,IAAMC,EAAG,UAAMF,EAAN,uCAA6CD,GACtD,OACAI,MAAMD,GACDhB,MAAK,SAAAkB,GAEF,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,OACb,IAAIC,MAAJ,8BAOP,SAASC,EAAWC,GACvB,IAAMT,EAAG,UAAMF,EAAN,kBAAwBW,EAAxB,oBAA2CZ,GACpD,OACAI,MAAMD,GACDhB,MAAK,SAAAkB,GAEF,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,OACb,IAAIC,MAAJ,8BAOP,SAASG,EAAUD,GACtB,IAAMT,EAAG,UAAMF,EAAN,kBAAwBW,EAAxB,4BAAmDZ,GAC5D,OACAI,MAAMD,GACDhB,MAAK,SAAAkB,GAEF,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,OACb,IAAIC,MAAJ,8BAOP,SAASxB,EAAa0B,GACzB,IAAMT,EAAG,UAAMF,EAAN,kBAAwBW,EAAxB,4BAAmDZ,GAC5D,OACAI,MAAMD,GACDhB,MAAK,SAAAkB,GAEF,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,OACb,IAAIC,MAAJ,8BAOP,SAASI,EAAWC,GACvB,IAAMZ,EAAG,UAAMF,EAAN,iCAAuCD,EAAvC,kBAAwDe,GACjE,OACIX,MAAMD,GACDhB,MAAK,SAAAkB,GACF,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,OACX,IAAIC,MAAJ","sources":["Views/MovieDetailsView/ReviewView.jsx","services/api.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchReviews } from \"services/api.jsx\";\n\n\nfunction Review() {\n    const {MovieId} = useParams();\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        fetchReviews(MovieId).then(data => {\n            setReviews(data.results);\n        }).catch(error => console.log('Error: ', error));\n    }, [MovieId]);\n\n    return (\n        <ul>\n            \n            {reviews.length === 0 ? <p>We don't have any reviews for this movie.</p>\n            : reviews.map(review => \n                < li key = {review.id } >\n                    <h3>Author: {review.author}</h3>\n                    <p>{review.content}</p>\n                </li>\n            )}  \n        </ul>\n    )\n}\n\nexport default Review;","const API_KEY = '92e9d2ddc265e58dd6d39fa8f044cca9';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n\n\nexport function fetchTrending() {\n    const URL = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    return (\n    fetch(URL)\n        .then(response => \n            {\n            if (response.ok) {\n                return response.json()\n            }\n            return Promise.reject(\n              new Error(`Something weent wrong!`)\n            );\n            } \n        ) \n    )\n};\n\nexport function fetchMovie(movieId) {\n    const URL = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    return (\n    fetch(URL)\n        .then(response => \n            {\n            if (response.ok) {\n                return response.json()\n            }\n            return Promise.reject(\n              new Error(`Something weent wrong!`),\n            );\n            } \n        ) \n    )\n};\n\nexport function fetchCast(movieId) {\n    const URL = `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    return (\n    fetch(URL)\n        .then(response => \n            {\n            if (response.ok) {\n                return response.json()\n            }\n            return Promise.reject(\n              new Error(`Something weent wrong!`),\n            );\n            } \n        ) \n    )\n};\n\nexport function fetchReviews(movieId) {\n    const URL = `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    return (\n    fetch(URL)\n        .then(response => \n            {\n            if (response.ok) {\n                return response.json()\n            }\n            return Promise.reject(\n              new Error(`Something weent wrong!`),\n            );\n            } \n        ) \n    )\n};\n\nexport function fetchQuery(query) {\n    const URL = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    return (\n        fetch(URL)\n            .then(response => {\n                if (response.ok) {\n                    return response.json()\n                }\n                return Promise.reject(\n                    new Error(`Something weent wrong!`),\n                );\n            }\n        )\n    )\n};"],"names":["MovieId","useParams","useState","reviews","setReviews","useEffect","fetchReviews","then","data","results","catch","error","console","log","length","map","review","author","content","id","API_KEY","BASE_URL","fetchTrending","URL","fetch","response","ok","json","Promise","reject","Error","fetchMovie","movieId","fetchCast","fetchQuery","query"],"sourceRoot":""}