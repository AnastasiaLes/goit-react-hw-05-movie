{"version":3,"file":"static/js/cast.00cdfae4.chunk.js","mappings":"kOAKe,SAASA,IACpB,IAAOC,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,GAAUN,GACLO,MAAK,SAAAC,GAAI,OAAIJ,EAAQI,EAAKL,SAC1BM,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,UAAWF,QAC5C,CAACV,KAGA,wBACKG,GAAQA,EAAKU,KAAI,SAAAC,GACd,IAAMC,EAAG,8CAA0CD,EAAME,cACzD,OACI,2BACI,gBAAKC,IAAKF,EAAKG,IAAKJ,EAAMK,KAAMC,MAAM,SACtC,yBAAIN,EAAMK,KAAV,QACA,uCAAeL,EAAMO,UAArB,SAHMP,EAAMQ,W,oJCpBpC,IAAMC,EAAU,mCACVC,EAAW,+BAIV,SAASC,IACZ,IAAMV,EAAG,UAAMS,EAAN,uCAA6CD,GACtD,OACAG,MAAMX,GACDR,MAAK,SAAAoB,GAEF,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,OACb,IAAIC,MAAJ,8BAOP,SAASC,EAAWC,GACvB,IAAMnB,EAAG,UAAMS,EAAN,kBAAwBU,EAAxB,oBAA2CX,GACpD,OACAG,MAAMX,GACDR,MAAK,SAAAoB,GAEF,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,OACb,IAAIC,MAAJ,8BAOP,SAAS1B,EAAU4B,GACtB,IAAMnB,EAAG,UAAMS,EAAN,kBAAwBU,EAAxB,4BAAmDX,GAC5D,OACAG,MAAMX,GACDR,MAAK,SAAAoB,GAEF,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,OACb,IAAIC,MAAJ,8BAOP,SAASG,EAAaD,GACzB,IAAMnB,EAAG,UAAMS,EAAN,kBAAwBU,EAAxB,4BAAmDX,GAC5D,OACAG,MAAMX,GACDR,MAAK,SAAAoB,GAEF,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,OACb,IAAIC,MAAJ,8BAOP,SAASI,EAAWC,GACvB,IAAMtB,EAAG,UAAMS,EAAN,iCAAuCD,EAAvC,kBAAwDc,GACjE,OACIX,MAAMX,GACDR,MAAK,SAAAoB,GACF,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,OACX,IAAIC,MAAJ","sources":["Views/MovieDetailsView/CastView.jsx","services/api.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchCast } from \"services/api.jsx\";\n\n\nexport default function Cast() {\n    const {MovieId} = useParams();\n    const [cast, setCast] = useState(null);\n    \n    useEffect(() => {\n        fetchCast(MovieId)\n            .then(data => setCast(data.cast))\n            .catch(error => console.log('Error: ', error));\n    }, [MovieId]);\n\n    return (\n        <ul>\n            {cast && cast.map(actor => {\n                const URL = `https://image.tmdb.org/t/p/original/${actor.profile_path}`\n                return (\n                    < li key={actor.id} >\n                        <img src={URL} alt={actor.name} width=\"100\" />\n                        <p>{actor.name} </p>\n                        <p>Character: {actor.character} </p>\n                    </li>\n                )\n            })\n            }\n        </ul>\n    );\n};\n","const API_KEY = '92e9d2ddc265e58dd6d39fa8f044cca9';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n\n\nexport function fetchTrending() {\n    const URL = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    return (\n    fetch(URL)\n        .then(response => \n            {\n            if (response.ok) {\n                return response.json()\n            }\n            return Promise.reject(\n              new Error(`Something weent wrong!`)\n            );\n            } \n        ) \n    )\n};\n\nexport function fetchMovie(movieId) {\n    const URL = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    return (\n    fetch(URL)\n        .then(response => \n            {\n            if (response.ok) {\n                return response.json()\n            }\n            return Promise.reject(\n              new Error(`Something weent wrong!`),\n            );\n            } \n        ) \n    )\n};\n\nexport function fetchCast(movieId) {\n    const URL = `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    return (\n    fetch(URL)\n        .then(response => \n            {\n            if (response.ok) {\n                return response.json()\n            }\n            return Promise.reject(\n              new Error(`Something weent wrong!`),\n            );\n            } \n        ) \n    )\n};\n\nexport function fetchReviews(movieId) {\n    const URL = `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    return (\n    fetch(URL)\n        .then(response => \n            {\n            if (response.ok) {\n                return response.json()\n            }\n            return Promise.reject(\n              new Error(`Something weent wrong!`),\n            );\n            } \n        ) \n    )\n};\n\nexport function fetchQuery(query) {\n    const URL = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    return (\n        fetch(URL)\n            .then(response => {\n                if (response.ok) {\n                    return response.json()\n                }\n                return Promise.reject(\n                    new Error(`Something weent wrong!`),\n                );\n            }\n        )\n    )\n};"],"names":["Cast","MovieId","useParams","useState","cast","setCast","useEffect","fetchCast","then","data","catch","error","console","log","map","actor","URL","profile_path","src","alt","name","width","character","id","API_KEY","BASE_URL","fetchTrending","fetch","response","ok","json","Promise","reject","Error","fetchMovie","movieId","fetchReviews","fetchQuery","query"],"sourceRoot":""}