{"version":3,"file":"static/js/movies-details.7b1c70a9.chunk.js","mappings":"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","sources":["Views/MovieDetailsView/MovieDetailsView.styled.js","Views/MovieDetailsView/AditionalView.jsx","Views/MovieDetailsView/MovieDetailsView.jsx","services/api.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n// import { NavLink } from 'react-router-dom';\n\n\nexport const MovieWrap = styled.div`\ndisplay: flex;\n/* padding: 20px; */\n`;\n\nexport const GoBackButton = styled.button`\ndisplay: flex;\n/* margin-bottom: 20px; */\n`;\nexport const MovieDetails = styled.div`\ndisplay: flex;\nflex-direction: column;\n/* gap: 10px; */\nmargin-left: 20px;\njustify-content: center;\n/* align-items: center; */\n`;\n\nexport const Genres = styled.div`\ndisplay: flex;\ngap: 16px;\n\n`;\n\nexport const AditionalInfoLinks = styled.div`\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\nmargin-left: 20px;\n`;\n\nexport const AditionalInfoWrap = styled.div`\nmargin-top: 10px;\nborder-top: solid 1px grey;\nborder-bottom: solid 1px grey;\n/* padding-top: 6px; */\npadding-bottom: 16px;\n`;","import { NavLink, useLocation } from 'react-router-dom';\nimport { AditionalInfoLinks, AditionalInfoWrap } from './MovieDetailsView.styled';\n\nexport function AditionalInfo(movieId) {\n\n    const location = useLocation();\n    \n    return (\n        <AditionalInfoWrap>\n            <h3>Aditional information</h3>\n            <AditionalInfoLinks>\n                <NavLink to={{\n                    pathname: `/goit-react-hw-05-movie/movies/${movieId}/cast`,\n                    state: { from: location }\n                }}>Cast</NavLink>\n                <NavLink to={{\n                    pathname: `/goit-react-hw-05-movie/movies/${movieId}/reviews`,\n                    state: { from: location }\n                }}>Reviews</NavLink>\n            </AditionalInfoLinks>\n        </AditionalInfoWrap>\n    )\n}","import { useState, useEffect } from \"react\";\nimport { useParams, Outlet, useNavigate } from \"react-router-dom\";\nimport { fetchMovie } from \"services/api.jsx\";\nimport { MovieWrap, GoBackButton, MovieDetails, Genres } from \"./MovieDetailsView.styled\";\nimport { AditionalInfo } from \"./AditionalView\";\n\nexport default function MovieDitails() {\n    const navigate = useNavigate();\n    const {MovieId} = useParams();\n    const [movie, setMovie] = useState({});\n    const imgPath = `https://image.tmdb.org/t/p/original/${movie.poster_path}`;\n\n    useEffect(() => {\n        fetchMovie(MovieId)\n            .then(data => setMovie(data))\n            .catch(error => console.log('Error: ', error));\n    }, [MovieId]);\n\n    const onButtonClick = () => {\n        if (new URL(document.location).pathname.includes('cast') || new URL(document.location).pathname.includes('reviews')) {\n            navigate(-2)\n            return;\n        }\n        navigate(-1)\n    };\n    \n    return (\n        <div>\n            <div>\n                <MovieWrap>\n                    <div>\n                        <GoBackButton type=\"button\" onClick={onButtonClick}>Go back</GoBackButton>\n                        <img src={imgPath} alt={movie.title} width=\"400\" />\n                    </div>\n        \n                    {movie &&\n                        <MovieDetails>\n                            {movie.release_date &&\n                                <h2> {movie.title} ({movie.release_date.substr(0, 4)})</h2>\n                            }\n                            <p><b>User score:</b> {movie.vote_average * 10}%</p>\n                            <h3>Overview</h3>\n                            <p>{movie.overview}</p>\n                            <h3>Genres</h3>\n                            <Genres>\n                                {movie.genres &&\n                                    movie.genres.map((genre) => <div key={genre.id}>{genre.name}</div>)}\n                            </Genres>\n                \n                        </MovieDetails>}\n                </MovieWrap>\n            \n                {AditionalInfo(MovieId)}\n            </div>\n            <Outlet />\n        </div>   \n    );\n};","const API_KEY = '92e9d2ddc265e58dd6d39fa8f044cca9';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n\n\nexport function fetchTrending() {\n    const URL = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    return (\n    fetch(URL)\n        .then(response => \n            {\n            if (response.ok) {\n                return response.json()\n            }\n            return Promise.reject(\n              new Error(`Something weent wrong!`)\n            );\n            } \n        ) \n    )\n};\n\nexport function fetchMovie(movieId) {\n    const URL = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    return (\n    fetch(URL)\n        .then(response => \n            {\n            if (response.ok) {\n                return response.json()\n            }\n            return Promise.reject(\n              new Error(`Something weent wrong!`),\n            );\n            } \n        ) \n    )\n};\n\nexport function fetchCast(movieId) {\n    const URL = `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    return (\n    fetch(URL)\n        .then(response => \n            {\n            if (response.ok) {\n                return response.json()\n            }\n            return Promise.reject(\n              new Error(`Something weent wrong!`),\n            );\n            } \n        ) \n    )\n};\n\nexport function fetchReviews(movieId) {\n    const URL = `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    return (\n    fetch(URL)\n        .then(response => \n            {\n            if (response.ok) {\n                return response.json()\n            }\n            return Promise.reject(\n              new Error(`Something weent wrong!`),\n            );\n            } \n        ) \n    )\n};\n\nexport function fetchQuery(query) {\n    const URL = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    return (\n        fetch(URL)\n            .then(response => {\n                if (response.ok) {\n                    return response.json()\n                }\n                return Promise.reject(\n                    new Error(`Something weent wrong!`),\n                );\n            }\n        )\n    )\n};"],"names":["MovieWrap","styled","GoBackButton","MovieDetails","Genres","AditionalInfoLinks","AditionalInfoWrap","AditionalInfo","movieId","location","useLocation","to","pathname","state","from","MovieDitails","navigate","useNavigate","MovieId","useParams","useState","movie","setMovie","imgPath","poster_path","useEffect","fetchMovie","then","data","catch","error","console","log","type","onClick","URL","document","includes","src","alt","title","width","release_date","substr","vote_average","overview","genres","map","genre","name","id","API_KEY","BASE_URL","fetchTrending","fetch","response","ok","json","Promise","reject","Error","fetchCast","fetchReviews","fetchQuery","query"],"sourceRoot":""}