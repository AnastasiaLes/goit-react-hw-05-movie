{"version":3,"file":"static/js/movie-details-page.a3b16a3b.chunk.js","mappings":"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","sources":["Services/API.js","Views/MovieDetailsView/MovieDetailsView.styled.js","Views/MovieDetailsView/AditionalView.jsx","Views/MovieDetailsView/MovieDetailsView.jsx"],"sourcesContent":["\nconst API_KEY = '92e9d2ddc265e58dd6d39fa8f044cca9';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport function Fetch() {\n    const URL = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    return (\n    fetch(URL)\n        .then(response => \n            {\n            if (response.ok) {\n                return response.json()\n            }\n            return Promise.reject(\n              new Error(`Something weent wrong!`),\n            );\n} \n        ) \n)\n    \n};\n\nexport function FetchMovie(movieId) {\n    const URL = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    return (\n    fetch(URL)\n        .then(response => \n            {\n            if (response.ok) {\n                return response.json()\n            }\n            return Promise.reject(\n              new Error(`Something weent wrong!`),\n            );\n} \n        ) \n)\n}\n\nexport function FetchCast(movieId) {\n    const URL = `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    return (\n    fetch(URL)\n        .then(response => \n            {\n            if (response.ok) {\n                return response.json()\n            }\n            return Promise.reject(\n              new Error(`Something weent wrong!`),\n            );\n} \n        ) \n)\n}\n\nexport function FetchReviews(movieId) {\n    const URL = `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    return (\n    fetch(URL)\n        .then(response => \n            {\n            if (response.ok) {\n                return response.json()\n            }\n            return Promise.reject(\n              new Error(`Something weent wrong!`),\n            );\n            } \n        ) \n    )\n}\n\nexport function FetchQuery(query) {\n    const URL = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    return (\n    fetch(URL)\n        .then(response => \n            {\n            if (response.ok) {\n                return response.json()\n            }\n            return Promise.reject(\n              new Error(`Something weent wrong!`),\n            );\n            } \n        ) \n    )\n}","import styled from \"@emotion/styled\";\n// import { NavLink } from 'react-router-dom';\n\n\nexport const MovieWrap = styled.div`\ndisplay: flex;\n/* padding: 20px; */\n`;\n\nexport const GoBackButton = styled.button`\ndisplay: flex;\n/* margin-bottom: 20px; */\n`;\nexport const MovieDetails = styled.div`\ndisplay: flex;\nflex-direction: column;\n/* gap: 10px; */\nmargin-left: 20px;\njustify-content: center;\n/* align-items: center; */\n`;\n\nexport const Genres = styled.div`\ndisplay: flex;\ngap: 16px;\n\n`;\n\nexport const AditionalInfoLinks = styled.div`\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\nmargin-left: 20px;\n`;\n\nexport const AditionalInfoWrap = styled.div`\nmargin-top: 10px;\nborder-top: solid 1px grey;\nborder-bottom: solid 1px grey;\n/* padding-top: 6px; */\npadding-bottom: 16px;\n`;","import { NavLink, useLocation } from 'react-router-dom';\nimport { AditionalInfoLinks, AditionalInfoWrap } from './MovieDetailsView.styled';\n\nexport function AditionalInfo(movieId) {\n\n    const location = useLocation();\n    \n    return (\n        <AditionalInfoWrap>\n            <h3>Aditional information</h3>\n            <AditionalInfoLinks>\n                <NavLink to={{\n                    pathname: `/goit-react-hw-05-movie/movies/${movieId}/cast`,\n                    state: { from: location }\n                }}>Cast</NavLink>\n                <NavLink to={{\n                    pathname: `/goit-react-hw-05-movie/movies/${movieId}/reviews`,\n                    state: { from: location }\n                }}>Reviews</NavLink>\n            </AditionalInfoLinks>\n        </AditionalInfoWrap>\n    )\n}","import { useState, useEffect } from \"react\";\nimport { useParams, Outlet, useNavigate } from \"react-router-dom\";\nimport { FetchMovie } from \"Services/API\";\nimport { MovieWrap, GoBackButton, MovieDetails, Genres } from \"./MovieDetailsView.styled\";\nimport { AditionalInfo } from \"./AditionalView\";\n\nfunction MovieDitails() {\n   \n    const {MovieId} = useParams();\n    const [movie, setMovie] = useState({});\n    const navigate = useNavigate();\n    const imgPath = `https://image.tmdb.org/t/p/original/${movie.poster_path}`;\n    // const location = useLocation();\n    useEffect(() => {\n        FetchMovie(MovieId)\n            .then(data => {\n                setMovie(data)\n                // console.log(location)\n            })\n            .catch(error => console.log('Error: ', error));\n    }, [MovieId]);\n\n    const onButtonClick = () => {\n        // console.log(new URL(document.location))\n        if (new URL(document.location).pathname.includes('cast') || new URL(document.location).pathname.includes('reviews')) {\n            navigate(-2)\n            return\n        }\n        // if (new URL(document.location).search.includes('query')) {\n        //     navigate(`/goit-react-hw-05-movie/movies/${new URL(document.location).search}`)\n        //     return;\n        // }\n                navigate(-1);  \n\n        // navigate('/goit-react-hw-05-movie/');  \n    }\n    \n    return (\n        <div>\n          <div>\n           <MovieWrap>\n        <div>\n        <GoBackButton type=\"button\" onClick={onButtonClick}>Go back</GoBackButton> \n        <img src={imgPath} alt={movie.title} width=\"400\" /> \n       </div>\n        \n        {movie && \n            <MovieDetails>\n                {movie.release_date &&\n                <h2> {movie.title} ({movie.release_date.substr(0, 4)})</h2>\n                }\n                <p><b>User score:</b> {movie.vote_average*10}%</p>\n                <h3>Overview</h3>\n                <p>{movie.overview}</p>\n                <h3>Genres</h3>\n                <Genres>\n                {movie.genres &&  \n                    movie.genres.map((genre) => <div key={genre.id}>{genre.name}</div>)}    \n               </Genres> \n                \n            </MovieDetails> }\n                </MovieWrap> \n            \n            {AditionalInfo(MovieId)}\n        </div>\n        <Outlet />  \n        </div>\n        \n        \n       \n        \n)\n}\n\nexport default MovieDitails;"],"names":["API_KEY","BASE_URL","Fetch","URL","fetch","then","response","ok","json","Promise","reject","Error","FetchMovie","movieId","FetchCast","FetchReviews","FetchQuery","query","MovieWrap","styled","GoBackButton","MovieDetails","Genres","AditionalInfoLinks","AditionalInfoWrap","AditionalInfo","location","useLocation","to","pathname","state","from","MovieId","useParams","useState","movie","setMovie","navigate","useNavigate","imgPath","poster_path","useEffect","data","catch","error","console","log","type","onClick","document","includes","src","alt","title","width","release_date","substr","vote_average","overview","genres","map","genre","name","id"],"sourceRoot":""}