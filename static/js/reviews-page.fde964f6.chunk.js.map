{"version":3,"file":"static/js/reviews-page.fde964f6.chunk.js","mappings":"qQACA,IAAMA,EAAU,mCACVC,EAAW,+BAEV,SAASC,IACZ,IAAMC,EAAG,UAAMF,EAAN,uCAA6CD,GACtD,OACAI,MAAMD,GACDE,MAAK,SAAAC,GAEF,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,OACb,IAAIC,MAAJ,8BAQP,SAASC,EAAWC,GACvB,IAAMV,EAAG,UAAMF,EAAN,kBAAwBY,EAAxB,oBAA2Cb,GACpD,OACAI,MAAMD,GACDE,MAAK,SAAAC,GAEF,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,OACb,IAAIC,MAAJ,8BAOP,SAASG,EAAUD,GACtB,IAAMV,EAAG,UAAMF,EAAN,kBAAwBY,EAAxB,4BAAmDb,GAC5D,OACAI,MAAMD,GACDE,MAAK,SAAAC,GAEF,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,OACb,IAAIC,MAAJ,8BAOP,SAASI,EAAaF,GACzB,IAAMV,EAAG,UAAMF,EAAN,kBAAwBY,EAAxB,4BAAmDb,GAC5D,OACAI,MAAMD,GACDE,MAAK,SAAAC,GAEF,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,OACb,IAAIC,MAAJ,8BAOP,SAASK,EAAWC,GACvB,IAAMd,EAAG,UAAMF,EAAN,iCAAuCD,EAAvC,kBAAwDiB,GACjE,OACAb,MAAMD,GACDE,MAAK,SAAAC,GAEF,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,OACb,IAAIC,MAAJ,gC,4ECtDd,UAxBA,WACI,IAAOO,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACNR,EAAAA,EAAAA,IAAaG,GAASb,MAAK,SAAAmB,GACvBF,EAAWE,EAAKC,YACjBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,UAAWF,QAC1C,CAACT,KAGA,wBAEwB,IAAnBG,EAAQS,QAAe,qEACtBT,EAAQU,KAAI,SAAAC,GAAM,OAChB,2BACI,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFHF,EAAOG","sources":["Services/API.js","Views/MovieDetailsView/ReviewView.jsx"],"sourcesContent":["\nconst API_KEY = '92e9d2ddc265e58dd6d39fa8f044cca9';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport function Fetch() {\n    const URL = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    return (\n    fetch(URL)\n        .then(response => \n            {\n            if (response.ok) {\n                return response.json()\n            }\n            return Promise.reject(\n              new Error(`Something weent wrong!`),\n            );\n} \n        ) \n)\n    \n};\n\nexport function FetchMovie(movieId) {\n    const URL = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    return (\n    fetch(URL)\n        .then(response => \n            {\n            if (response.ok) {\n                return response.json()\n            }\n            return Promise.reject(\n              new Error(`Something weent wrong!`),\n            );\n} \n        ) \n)\n}\n\nexport function FetchCast(movieId) {\n    const URL = `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    return (\n    fetch(URL)\n        .then(response => \n            {\n            if (response.ok) {\n                return response.json()\n            }\n            return Promise.reject(\n              new Error(`Something weent wrong!`),\n            );\n} \n        ) \n)\n}\n\nexport function FetchReviews(movieId) {\n    const URL = `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    return (\n    fetch(URL)\n        .then(response => \n            {\n            if (response.ok) {\n                return response.json()\n            }\n            return Promise.reject(\n              new Error(`Something weent wrong!`),\n            );\n            } \n        ) \n    )\n}\n\nexport function FetchQuery(query) {\n    const URL = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    return (\n    fetch(URL)\n        .then(response => \n            {\n            if (response.ok) {\n                return response.json()\n            }\n            return Promise.reject(\n              new Error(`Something weent wrong!`),\n            );\n            } \n        ) \n    )\n}","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { FetchReviews } from \"Services/API\";\n\n\nfunction Review() {\n    const {MovieId} = useParams();\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        FetchReviews(MovieId).then(data => {\n            setReviews(data.results);\n        }).catch(error => console.log('Error: ', error));\n    }, [MovieId]);\n\n    return (\n        <ul>\n            \n            {reviews.length === 0 ? <p>We don't have any reviews for this movie.</p>\n            : reviews.map(review => \n                < li key = {review.id } >\n                    <h3>Author: {review.author}</h3>\n                    <p>{review.content}</p>\n                </li>\n            )}  \n        </ul>\n    )\n}\n\nexport default Review;"],"names":["API_KEY","BASE_URL","Fetch","URL","fetch","then","response","ok","json","Promise","reject","Error","FetchMovie","movieId","FetchCast","FetchReviews","FetchQuery","query","MovieId","useParams","useState","reviews","setReviews","useEffect","data","results","catch","error","console","log","length","map","review","author","content","id"],"sourceRoot":""}